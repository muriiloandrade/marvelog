{
  "name": "marvelog-server",
  "version": "0.0.1",
  "description": "API that intermediate the communication with Marvelog front-end application and Marvel's API.",
  "author": "Murilo Andrade",
  "private": true,
  "license": "MIT",
  "homepage": "https://github.com/muriiloandrade/marvelog",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/muriiloandrade/marvelog.git"
  },
  "bugs": {
    "url": "https://github.com/muriiloandrade/marvelog/issues"
  },
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:localdebug": "NODE_ENV=dev nest start --preserveWatchOutput --debug 0.0.0.0:9239 --watch",
    "start:remotedebug": "NODE_ENV=staging nest start --preserveWatchOutput --debug 0.0.0.0:9239 --watch",
    "start:prod": "NODE_ENV=prod node -r ./tsconfig-paths-bootstrap.js dist/src/main",
    "cs:local": "docker-compose --file docker-compose.local.yml --env-file .env.dev up --remove-orphans",
    "cs:remote": "docker-compose --file docker-compose.staging.yml --env-file .env.staging up --remove-orphans",
    "up:local": "docker-compose --file docker-compose.local.yml --env-file .env.dev up --no-build --remove-orphans",
    "up:remote": "docker-compose --file docker-compose.staging.yml --env-file .env.staging up --no-build --remove-orphans",
    "down:local": "docker-compose --file docker-compose.local.yml --env-file .env.dev down --rmi local --remove-orphans",
    "down:remote": "docker-compose --file docker-compose.staging.yml --env-file .env.staging down --rmi local --remove-orphans",
    "knex": "NODE_ENV=dev knex --knexfile src/config/knex/knexfile.ts",
    "migrate": "npm run knex migrate:latest",
    "migrate:make": "NODE_ENV=dev npm run knex migrate:make -- -x ts",
    "migrate:rb": "npm run knex migrate:rollback",
    "migrate:up": "npm run knex migrate:up",
    "seed": "npm run knex seed:run",
    "seed:make": "npm run knex seed:make -- -x ts",
    "lint": "eslint \"{src,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json"
  },
  "dependencies": {
    "@nestjs/axios": "0.0.7",
    "@nestjs/common": "^8.4.1",
    "@nestjs/config": "^2.0.0",
    "@nestjs/core": "^8.4.1",
    "@nestjs/jwt": "^8.0.0",
    "@nestjs/mapped-types": "^1.0.1",
    "@nestjs/passport": "^8.2.1",
    "@nestjs/platform-express": "^8.4.1",
    "bcryptjs": "^2.4.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.13.2",
    "compression": "^1.7.4",
    "dotenv": "^16.0.0",
    "helmet": "^5.0.2",
    "knex": "^1.0.4",
    "mysql2": "^2.3.3",
    "objection": "^3.0.1",
    "passport": "^0.5.2",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.5.5",
    "ts-md5": "^1.2.11",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@nestjs/cli": "^8.2.3",
    "@nestjs/schematics": "^8.0.8",
    "@nestjs/testing": "^8.4.1",
    "@types/bcryptjs": "^2.4.2",
    "@types/compression": "^1.7.2",
    "@types/express": "^4.17.13",
    "@types/jest": "^27.4.1",
    "@types/node": "^17.0.21",
    "@types/passport": "^1.0.7",
    "@types/passport-jwt": "^3.0.6",
    "@types/passport-local": "^1.0.34",
    "@types/supertest": "^2.0.10",
    "@types/uuid": "^8.3.4",
    "@typescript-eslint/eslint-plugin": "^5.15.0",
    "@typescript-eslint/parser": "^5.15.0",
    "eslint": "^8.11.0",
    "eslint-config-airbnb-typescript": "^16.1.4",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-import": "^2.25.4",
    "eslint-plugin-prettier": "^4.0.0",
    "jest": "^27.5.1",
    "prettier": "^2.6.0",
    "supertest": "^6.2.2",
    "ts-jest": "^27.1.3",
    "ts-loader": "^9.2.8",
    "ts-node": "^10.7.0",
    "tsconfig-paths": "^3.14.0",
    "typescript": "^4.6.2"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
